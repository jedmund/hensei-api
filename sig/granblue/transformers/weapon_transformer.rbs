module Granblue
  module Transformers
    class WeaponTransformer < BaseTransformer
      # Constants for level calculations
      UNCAP_LEVELS: Array[Integer]
      TRANSCENDENCE_LEVELS: Array[Integer]
      MULTIELEMENT_SERIES: Array[Integer]

      # Implements abstract method from BaseTransformer
      def transform: -> Array[Hash[Symbol, untyped]]

      private

      def transform_base_attributes: (Hash[String, untyped] master, Hash[String, untyped] param) -> Hash[Symbol, untyped]

      def transform_awakening: (Hash[String, untyped] param) -> Hash[Symbol, Hash[Symbol, untyped]]

      def transform_ax_skills: (Hash[String, untyped] param) -> Hash[Symbol, Array[Hash[Symbol, untyped]]]

      def transform_weapon_keys: (Hash[String, untyped] weapon_data) -> Hash[Symbol, Array[String]]

      def calculate_uncap_level: (Integer? level) -> Integer

      def calculate_transcendence_level: (Integer? level) -> Integer
    end
  end
end
